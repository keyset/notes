{
  "info": {
    "_postman_id": "10b8d23f-cd3a-4beb-b424-237885cdd3b0",
    "name": "SimpleKart Integration Tests",
    "description": "API for an imaginary E-Commerce store to demonstrate API Builder capabilities in Postman\n\nContact Support:\n Name: Postman Team\n Email: simplekart@postman.com",
    "schema": "https://schema.getpostman.com/json/collection/v2.0.0/collection.json"
  },
  "item": [
    {
      "name": "Create new order and fetch it's items",
      "item": [
        {
          "name": "Create an order",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "4b9f2b9f-4e5b-45cc-90a8-e3a6adc43b69",
                "exec": [
                  "const body = pm.response.json();",
                  "",
                  "eval(pm.variables.get(\"lib\"));",
                  "",
                  "// Views",
                  "const template = `",
                  "    <style>",
                  "        body {",
                  "            color: #fff;",
                  "        }",
                  "    </style>",
                  "    <h5>Order: {{id}}</h5>",
                  "    <p>",
                  "        <b>Address:</b> {{address}}</br>",
                  "        Delivery By: {{arrivalDate}}",
                  "    </p>",
                  "    <hr />",
                  "    <table>",
                  "        <tr>",
                  "            <th style=\"padding-left: 10px;\">Name</th>",
                  "            <th>Description</th>",
                  "            <th style=\"padding-right: 10px;\">Price</th>",
                  "        </tr>",
                  "",
                  "        {{#each items}}",
                  "            <tr>",
                  "                <td style=\"padding-left: 10px;\">{{name}}</td>",
                  "                <td>{{description}}</td>",
                  "                <td style=\"padding-right: 10px;\">\u00a3 {{price}}</td>",
                  "            </tr>",
                  "        {{/each}}",
                  "        ",
                  "        <tr>",
                  "            <td colSpan=2 style=\"text-align: right\">",
                  "                <b>Total</b>",
                  "            </td>",
                  "            <td>\u00a3 {{total}}</td>",
                  "        </tr>",
                  "    </table>",
                  "`;",
                  "",
                  "pm.visualizer.set(template, {",
                  "    items: body.items,",
                  "    id: body.orderId,",
                  "    address: body.address,",
                  "    total: body.orderTotal,",
                  "    arrivalDate: body.arrivalDate",
                  "});",
                  "",
                  "",
                  "// Tests",
                  "",
                  "it(\"Should have 200 OK status code\", function () {",
                  "    pm.response.to.have.status(201);",
                  "});",
                  "",
                  "it('Order should have the correct item', function () {",
                  "    expect(body.orderId).to.be.ok;",
                  "    expect(body.items.length).to.eql(1);",
                  "    ",
                  "    expect(body.arrivalDate).to.be.ok;",
                  "    expect(body.orderDate).to.be.ok;",
                  "    expect(body.orderTotal).to.eql(15);",
                  "    expect(body.address).to.eql('SimpleKart HQ, 221B Baker street');",
                  "});",
                  "",
                  "pm.environment.set('orderId', body.orderId);"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "_postman_id": "57899ff7-b1a4-48ed-a520-2cdd5124c3dd",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "x-mock-match-request-body",
                "value": "true",
                "type": "text"
              },
              {
                "key": "Content-Type",
                "value": "application/json",
                "type": "text"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"address\": \"SimpleKart HQ, 221B Baker street\",\n    \"items\": [\n        {\n            \"itemId\": 16247,\n            \"name\": \"Postman Merch\",\n            \"price\": 15,\n            \"description\": \"Official T-shirt for the Postman community.\"\n        }\n    ]\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": "{{baseUrl}}/orders"
          },
          "response": []
        },
        {
          "name": "Fetch order details",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "432bb7df-08aa-43d3-8bf8-e7afcf7d5291",
                "exec": [
                  "const body = pm.response.json();",
                  "",
                  "eval(pm.variables.get(\"lib\"));",
                  "",
                  "// Views",
                  "const template = `",
                  "    <style>",
                  "        body {",
                  "            color: #fff;",
                  "        }",
                  "    </style>",
                  "    <h5>Order: {{id}}</h5>",
                  "    <p>",
                  "        <b>Address:</b> {{address}}</br>",
                  "        Delivery By: {{arrivalDate}}",
                  "    </p>",
                  "    <hr />",
                  "    <table>",
                  "        <tr>",
                  "            <th style=\"padding-left: 10px;\">Name</th>",
                  "            <th>Description</th>",
                  "            <th style=\"padding-right: 10px;\">Price</th>",
                  "        </tr>",
                  "",
                  "        {{#each items}}",
                  "            <tr>",
                  "                <td style=\"padding-left: 10px;\">{{name}}</td>",
                  "                <td>{{description}}</td>",
                  "                <td style=\"padding-right: 10px;\">\u00a3 {{price}}</td>",
                  "            </tr>",
                  "        {{/each}}",
                  "        ",
                  "        <tr>",
                  "            <td colSpan=2 style=\"text-align: right\">",
                  "                <b>Total</b>",
                  "            </td>",
                  "            <td>\u00a3 {{total}}</td>",
                  "        </tr>",
                  "    </table>",
                  "`;",
                  "",
                  "pm.visualizer.set(template, {",
                  "    items: body.items,",
                  "    id: body.orderId,",
                  "    address: body.address,",
                  "    total: body.orderTotal,",
                  "    arrivalDate: body.arrivalDate",
                  "});",
                  "",
                  "",
                  "// Tests",
                  "",
                  "it(\"Should have 200 OK status code\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "it('Order should have the correct item', function () {",
                  "    expect(body.orderId).to.be.ok;",
                  "    expect(body.items.length).to.eql(1);",
                  "    ",
                  "    expect(body.arrivalDate).to.be.ok;",
                  "    expect(body.orderDate).to.be.ok;",
                  "    expect(body.orderTotal).to.eql(15);",
                  "    expect(body.address).to.eql('SimpleKart HQ, 221B Baker street');",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "_postman_id": "6834a3aa-e387-4b78-95bc-89ba8ee4ba62",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/orders/:orderId",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "orders",
                ":orderId"
              ],
              "variable": [
                {
                  "id": "b53c14f2-5910-4e3f-9682-0d8ec447ae98",
                  "key": "orderId",
                  "value": "{{orderId}}",
                  "type": "string"
                }
              ]
            }
          },
          "response": []
        },
        {
          "name": "Get all orders",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "ec5becca-b443-409a-b443-4cee143b9a56",
                "exec": [
                  "const body = pm.response.json();",
                  "",
                  "eval(pm.variables.get(\"lib\"));",
                  "",
                  "// Views",
                  "const template = `",
                  "    <style>",
                  "        body {",
                  "            color: #fff;",
                  "        }",
                  "    </style>",
                  "    <table>",
                  "        <tr>",
                  "            <th style=\"padding-left: 10px;\">Order ID</th>",
                  "            <th>Items</th>",
                  "            <th>Ordered At</th>",
                  "            <th>Address</th>",
                  "            <th style=\"padding-right: 10px;\">Total Amount</th>",
                  "        </tr>",
                  "",
                  "        {{#each orders}}",
                  "            <tr>",
                  "                <td style=\"padding-left: 10px;\">{{orderId}}</td>",
                  "                <td>{{items}}</td>",
                  "                <td>{{orderDate}}</td>",
                  "                <td>{{address}}</td>",
                  "                <td style=\"padding-right: 10px;\">\u00a3 {{orderTotal}}</td>",
                  "            </tr>",
                  "        {{/each}}",
                  "        ",
                  "        <tr>",
                  "            <td colSpan=4 style=\"text-align: right\">",
                  "                <b>Total</b>",
                  "            </td>",
                  "            <td>\u00a3 {{total}}</td>",
                  "        </tr>",
                  "    </table>",
                  "`;",
                  "",
                  "pm.visualizer.set(template, {",
                  "    orders: body.map((order) => {",
                  "        return {...order, items: order.items.length};",
                  "    }),",
                  "    total: body.reduce((acc, order) => acc + order.orderTotal, 0)",
                  "});",
                  "",
                  "",
                  "// Tests",
                  "",
                  "it(\"Should have 200 OK status code\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "it('Orders should have the new order', function () {",
                  "    expect(body.length).to.be.ok;",
                  "    ",
                  "    let orderFound = false;",
                  "    ",
                  "    body.forEach((order) => {",
                  "        orderFound = orderFound || order.orderId === pm.environment.get('orderId');",
                  "        ",
                  "        expect(order.orderId).to.be.ok;",
                  "        expect(order.items.length).to.be.ok;",
                  "        expect(order.orderTotal).to.be.ok;",
                  "        expect(order.arrivalDate).to.be.ok;",
                  "        expect(order.orderDate).to.be.ok;",
                  "    });",
                  "    ",
                  "    expect(orderFound).to.eql(true);",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "_postman_id": "311ef5e3-9f36-4aaa-9afc-20f4ae23e089",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/orders?list=10",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "orders"
              ],
              "query": [
                {
                  "key": "list",
                  "value": "10",
                  "description": "Number of orders to show"
                }
              ]
            },
            "description": "Obtain order details from orders database"
          },
          "response": []
        }
      ],
      "_postman_id": "6c7fae76-f834-4d65-8612-cb949ecd2aad"
    },
    {
      "name": "Fetch order details given an order id",
      "item": [
        {
          "name": "Fetch order details",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "432bb7df-08aa-43d3-8bf8-e7afcf7d5291",
                "exec": [
                  "const body = pm.response.json();",
                  "",
                  "eval(pm.variables.get(\"lib\"));",
                  "",
                  "// Views",
                  "const template = `",
                  "    <style>",
                  "        body {",
                  "            color: #fff;",
                  "        }",
                  "    </style>",
                  "    <h5>Order: {{id}}</h5>",
                  "    <p>",
                  "        <b>Address:</b> {{address}}</br>",
                  "        Delivery By: {{arrivalDate}}",
                  "    </p>",
                  "    <hr />",
                  "    <table>",
                  "        <tr>",
                  "            <th style=\"padding-left: 10px;\">Name</th>",
                  "            <th>Description</th>",
                  "            <th style=\"padding-right: 10px;\">Price</th>",
                  "        </tr>",
                  "",
                  "        {{#each items}}",
                  "            <tr>",
                  "                <td style=\"padding-left: 10px;\">{{name}}</td>",
                  "                <td>{{description}}</td>",
                  "                <td style=\"padding-right: 10px;\">\u00a3 {{price}}</td>",
                  "            </tr>",
                  "        {{/each}}",
                  "        ",
                  "        <tr>",
                  "            <td colSpan=2 style=\"text-align: right\">",
                  "                <b>Total</b>",
                  "            </td>",
                  "            <td>\u00a3 {{total}}</td>",
                  "        </tr>",
                  "    </table>",
                  "`;",
                  "",
                  "pm.visualizer.set(template, {",
                  "    items: body.items,",
                  "    id: body.orderId,",
                  "    address: body.address,",
                  "    total: body.orderTotal,",
                  "    arrivalDate: body.arrivalDate",
                  "});",
                  "",
                  "",
                  "// Tests",
                  "",
                  "it(\"Should have 200 OK status code\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "it('Order should have the correct item', function () {",
                  "    expect(body.orderId).to.be.ok;",
                  "    expect(body.items.length).to.eql(1);",
                  "    ",
                  "    expect(body.arrivalDate).to.be.ok;",
                  "    expect(body.orderDate).to.be.ok;",
                  "    expect(body.orderTotal).to.eql(15);",
                  "    expect(body.address).to.eql('SimpleKart HQ, 221B Baker street');",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "_postman_id": "b5be7533-9048-41a1-88e7-1949fe344c04",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/orders/:orderId",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "orders",
                ":orderId"
              ],
              "variable": [
                {
                  "id": "b503569e-d002-438c-b691-6e8484615ece",
                  "key": "orderId",
                  "value": "{{orderId}}",
                  "type": "string"
                }
              ]
            }
          },
          "response": []
        }
      ],
      "_postman_id": "3e6670ed-aa65-4587-8a31-d94a6f0563c0"
    },
    {
      "name": "Check items and its details",
      "item": [
        {
          "name": "Fetch all items",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "0bbab959-ead2-45d9-a055-5bbc0fb4947d",
                "exec": [
                  "const body = pm.response.json();",
                  "",
                  "eval(pm.variables.get(\"lib\"));",
                  "",
                  "// Views",
                  "const template = `",
                  "    <style>",
                  "        body {",
                  "            color: #fff;",
                  "        }",
                  "    </style>",
                  "    <table>",
                  "        <tr>",
                  "            <th style=\"padding-left: 10px; width: 25%;\">Name</th>",
                  "            <th style=\"width: 50%\">Description</th>",
                  "            <th style=\"padding-right: 10px;\">Price</th>",
                  "        </tr>",
                  "",
                  "        {{#each items}}",
                  "            <tr>",
                  "                <td style=\"padding-left: 10px;\">{{name}}</td>",
                  "                <td>{{description}}</td>",
                  "                <td style=\"padding-right: 10px;\">\u00a3 {{price}}</td>",
                  "            </tr>",
                  "        {{/each}}",
                  "    </table>",
                  "`;",
                  "",
                  "pm.visualizer.set(template, {",
                  "    items: body",
                  "});",
                  "",
                  "",
                  "// Tests",
                  "",
                  "it(\"Should have 200 OK status code\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "it('Order should have the correct item', function () {",
                  "    expect(body.length).to.be.ok;",
                  "    ",
                  "    body.forEach((item) => {",
                  "        expect(item.name).to.be.ok;",
                  "        expect(item.description).to.be.ok;",
                  "        expect(item.itemId).to.be.ok;",
                  "        expect(item.price).to.be.ok;",
                  "    });",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "_postman_id": "c57245b8-5407-4ca8-bc19-a5256e1b45b2",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/items?list=10",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "items"
              ],
              "query": [
                {
                  "key": "list",
                  "value": "10"
                }
              ]
            }
          },
          "response": []
        },
        {
          "name": "Fetch postman merch",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "0bbab959-ead2-45d9-a055-5bbc0fb4947d",
                "exec": [
                  "const body = pm.response.json();",
                  "",
                  "eval(pm.variables.get(\"lib\"));",
                  "",
                  "// Views",
                  "const template = `",
                  "    <style>",
                  "        body {",
                  "            color: #fff;",
                  "        }",
                  "    </style>",
                  "    <table>",
                  "        <tr>",
                  "            <th style=\"padding-left: 10px; width: 10%;\">Id</th>",
                  "            <th style=\"width: 15%;\">Name</th>",
                  "            <th style=\"width: 40%\">Description</th>",
                  "            <th style=\"padding-right: 10px;\">Price</th>",
                  "        </tr>",
                  "",
                  "        <tr>",
                  "            <td style=\"padding-left: 10px;\">{{itemId}}</td>",
                  "            <td>{{name}}</td>",
                  "            <td>{{description}}</td>",
                  "            <td style=\"padding-right: 10px;\">\u00a3 {{price}}</td>",
                  "        </tr>",
                  "    </table>",
                  "`;",
                  "",
                  "pm.visualizer.set(template, {...body});",
                  "",
                  "",
                  "// Tests",
                  "",
                  "it(\"Should have 200 OK status code\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "it('Order should have the correct item', function () {",
                  "    expect(body.name).to.be.ok;",
                  "    expect(body.description).to.be.ok;",
                  "    expect(body.itemId).to.be.ok;",
                  "    expect(body.price).to.be.ok;",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "_postman_id": "10aad05c-35b3-4faa-b55b-63938f8e5271",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/items/:itemId",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "items",
                ":itemId"
              ],
              "variable": [
                {
                  "id": "16b9657b-e433-4201-a934-d5d8502f2d54",
                  "key": "itemId",
                  "value": "16247",
                  "type": "string"
                }
              ]
            }
          },
          "response": []
        }
      ],
      "_postman_id": "76c6e9b6-175b-4b0f-8c03-fcc164b9da31"
    }
  ],
  "event": [
    {
      "listen": "prerequest",
      "script": {
        "id": "de750dfb-435f-4e66-b35c-a560e35a8b89",
        "type": "text/javascript",
        "exec": [
          ""
        ]
      }
    },
    {
      "listen": "test",
      "script": {
        "id": "d113b650-c849-478b-9418-e80a4556860a",
        "type": "text/javascript",
        "exec": [
          "var it = pm.test;",
          "var expect = pm.expect;"
        ]
      }
    }
  ],
  "variable": [
    {
      "id": "7e7b3fcd-b268-40ee-b136-f4c19b246c9a",
      "key": "baseUrl",
      "value": "https://fffc2eb4-dbcf-4c6d-bc30-c3cb2e7ecfa6.mock.pstmn.io",
      "type": "string"
    },
    {
      "id": "e54148f5-04c3-4d45-9af1-3d5b5440c95d",
      "key": "lib",
      "value": "var it = pm.test;\nvar expect = pm.expect;",
      "type": "string"
    }
  ]
}